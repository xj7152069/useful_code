# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

###############my path####################
export CWPROOT=/home/xj/soft/su
export PATH=$PATH:/home/xj/soft/su/bin


export CUDA_HOME=/usr/local/cuda-11.0
export PATH=$PATH:$CUDA_HOME/bin 
export LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}







##############my commond#################
##line_to_service
alias xj.701.line.out='ssh -p 701 xj@27.115.40.122'
alias xj.701.line.in='ssh xj@192.168.1.200'
alias xj.701.line.out.withimage='ssh -p 701 xj@27.115.40.122 -X'
alias xj.701.line.in.withimage='ssh xj@192.168.1.200 -X'

alias xj.cpu.frequency='watch -n 3 "cat /proc/cpuinfo | grep -i mhz"'
alias xj.cpu.frequency.utralow='echo "5" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct'
alias xj.cpu.frequency.low='echo "25" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct'
alias xj.cpu.frequency.medium='echo "50" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct'
alias xj.cpu.frequency.high='echo "1000" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct'

scp701out="scp -P 701 -r file_pwd(source) xj@27.115.40.122:server_pwd(target)"
alias xj.701.scp.out='echo $scp701out'

scp701in="scp -r file_pwd(source) xj@192.168.1.200:server_pwd(target)"
alias xj.701.scp.in='echo $scp701in'

##for_picture
ximage_shell="ximage<filename n1=101 wbox=1500 hbox=500 legend=1 f1=0 d1=10 f2=0 d2=10 label1='(m)' label2='(m)' bclip=0.01 wclip=-0.01"
alias xj.ximage='echo $ximage_shell'

xmovie_shell="xmovie<movie.bin n1=301 n2=301 width=1000 height=1000 sleep= perc= bclip=0.01 wclip=-0.01"
alias xj.xmovie='echo $xmovie_shell'

psxgraph_shell="psgraph<wavelet01.bin n=200 label1='time(ms)' label2='amplitude' title='wavelet' wbox=5.0 hbox=2.0 linewidth=3 linecolor=blue style=normal >wavelet01.eps"
alias xj.psgraph='echo $psxgraph_shell'

alias xj.createproject='cp -r /home/xj/templates/project_name .'

alias xj.gputop='watch -n 3 nvidia-smi'
alias python='/usr/bin/python3.6'




source /home/xj/soft/madagascar-3.1.1/env.sh
